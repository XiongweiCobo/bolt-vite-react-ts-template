For all designs I ask you to make, have them be beautiful, not cookie cutter. Make webpages that are fully featured and worthy for production.

By default, this template supports JSX syntax with Tailwind CSS classes, React hooks, and Lucide React for icons. Do not install other packages for UI themes, icons, etc unless absolutely necessary or I request them.

Use icons from antd for logos.

Use stock photos from unsplash where appropriate, only valid URLs you know exist. Do not download the images, only link to them in image tags.

Use Cobo UI Toolkit (or antd) for components.

Here is the documentation for Cobo UI Toolkit:

# Cobo-UI-Toolkit

Cobo-UI-Toolkit is a set of UI components for Cobo products. It is built on top of [React](https://reactjs.org/) and [Ant Design](https://ant.design/). All components are based on Ant Design, but with some customizations, most APIs are the same as Ant Design (https://ant.design/components/overview-cn).

It includes:
- Button
- Select
- Alert
- Avatar
- Card
- Checkbox
- Copy
- DatePicker
- Drawer
- Dropdown
- Input
- Modal
- Radio
- Switch
- Table
- Tag
- Tooltip
- Loading
- Spin
- Message
- Pagination
- Tabs

Other components can be imported from antd.

## Installation

1. install npm dependencies
```bash
npm install @cobo/cobo-ui-toolkit
npm install antd
npm install @ant-design/icons
```

2. download fonts
Download Poppins and Oxanium fonts (regular/meduim/semibold) from https://fonts.google.com/ and put them in `public/fonts`.

## Usage

1. use `ConfigProvider` to wrap your app. for example:
    ```tsx
    import { ConfigProvider } from '@cobo/cobo-ui-toolkit';
    import { App } from './App';

    function App() {
        return (
            <ConfigProvider>
                <App />
            </ConfigProvider>
        );
    }
    ```
2. use components from `@cobo/cobo-ui-toolkit`. eg:
    ```tsx
    import { Button } from '@cobo/cobo-ui-toolkit';

    function App() {
        return (
            <Button>Click me</Button>
        );
    }
    ```

## Components

### Button
#### API

##### Cobo 属性

| 参数           | 说明                           | 类型           | 默认值    |
| -------------- | ---------------------------- | -------------- | -------- |
| autoLoading | 点击按钮后会显示 loading，等待 `onClick` 执行完毕后，loading 消失。如果设置了 `loading` 属性，则 `autoLoading` 无效。 | boolean | false |

##### Antd 属性

| 参数           | 说明                           | 类型           | 默认值    |
| -------------- | ---------------------------- | -------------- | -------- |
| type | 按钮类型，当设置 `variant` 与 `color` 时以后者为准 | `primary` \| `secondary` \| `dashed` \| `text` \| `link` | `primary` |
| 其余参数       | [同 Button 组件的参数](https://ant.design/components/button-cn#api)   | - | - |

#### Demo

##### 基本使用

通过 `type` 语法糖，使用预设的按钮样式：主按钮、次按钮、虚线按钮、文本按钮和链接按钮。推荐主按钮在同一个操作区域最多出现一次。**Cobo 默认的按钮是 `primary`**

```tsx
import { Button } from '@cobo/cobo-ui-toolkit';

function App() {
  return (
    <div className="flex gap-2">
      <Button>Primary Button</Button>
      <Button type="secondary">Secondary Button</Button>
      <Button type="dashed">Dashed Button</Button>
      <Button type="text">Text Button</Button>
      <Button type="link">Link Button</Button>
    </div>
  );
}
```

### Select
#### API

| 参数           | 说明                           | 类型           | 默认值    |
| -------------- | ---------------------------- | -------------- | -------- |
| allowClear     | 是否允许清空                   | boolean        | true     |
| menuItemSelectedIcon | 自定义多选时当前选中的条目图标，如果你通过 `optionRender` 自定义渲染了「选中图标」，需要把这个置为 `false`，否则有两个图标 | ReactNode | `<CheckOutlined />` |
| 其余参数       | [同 Select 组件的参数](https://ant.design/components/select-cn#api)   | - | - |


#### Demo

##### 基本用法

```tsx
import { Select } from '@cobo/cobo-ui-toolkit';
import { Space } from 'antd';

const handleChange = (value: string) => {
  console.log(`selected ${value}`);
};

const App: React.FC = () => (
  <Space wrap>
    <Select
      defaultValue="lucy"
      style={{ width: 120 }}
      onChange={handleChange}
      options={[
        { value: 'jack', label: 'Jack' },
        { value: 'lucy', label: 'Lucy' },
        { value: 'Yiminghe', label: 'yiminghe' },
        { value: 'disabled', label: 'Disabled', disabled: true },
      ]}
    />
    <Select
      defaultValue="lucy"
      style={{ width: 120 }}
      disabled
      options={[{ value: 'lucy', label: 'Lucy' }]}
    />
    <Select
      defaultValue="lucy"
      style={{ width: 120 }}
      loading
      options={[{ value: 'lucy', label: 'Lucy' }]}
    />
    <Select
      defaultValue="lucy"
      style={{ width: 120 }}
      allowClear
      options={[{ value: 'lucy', label: 'Lucy' }]}
      placeholder="select it"
    />
  </Space>
);
```

# Style

Add the following CSS into `index.css`:

```
html {
  font-size: 16px;
}

body {
  margin: 0;

  font-family:
    Poppins,
    -apple-system,
    BlinkMacSystemFont,
    'Segoe UI',
    Roboto,
    Oxygen,
    Cantarell,
    'Fira Sans',
    'Droid Sans',
    'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #1c1c1c;
}

a:hover {
  color: #1f32d6;
}

/* 字体库 */
@font-face {
  font-family: Poppins;
  src: url('/fonts/Poppins-Regular.ttf');
}

@font-face {
  font-family: Poppins-Medium;
  src: url('/fonts/Poppins-Medium.ttf');
}

@font-face {
  font-family: Poppins-SemiBold;
  src: url('/fonts/Poppins-SemiBold.ttf');
}

@font-face {
  font-family: Oxanium;
  src: url('/fonts/Oxanium-Regular.ttf');
}

@font-face {
  font-family: Oxanium-Medium;
  src: url('/fonts/Oxanium-Medium.ttf');
}

@font-face {
  font-family: Oxanium-SemiBold;
  src: url('/fonts/Oxanium-SemiBold.ttf');
}

@font-face {
  font-family: Poppins;
  font-weight: 400;
  src: url('/fonts/Poppins-Regular.ttf');
}

@font-face {
  font-family: Poppins;
  font-weight: 500;
  src: url('/fonts/Poppins-Medium.ttf');
}

@font-face {
  font-family: Poppins;
  font-weight: 600;
  src: url('/fonts/Poppins-SemiBold.ttf');
}

@font-face {
  font-family: Oxanium;
  font-weight: 400;
  src: url('/fonts/Oxanium-Regular.ttf');
}

@font-face {
  font-family: Oxanium;
  font-weight: 500;
  src: url('/fonts/Oxanium-Medium.ttf');
}

@font-face {
  font-family: Oxanium;
  font-weight: 600;
  src: url('/fonts/Oxanium-SemiBold.ttf');
}
```

# Tailwind Theme

Use the following theme for Tailwind CSS, eg. `<div className="text-gray_1 font-sm">text</div>`.

Usually, use `font-medium` instead of `font-ppM` and `font-ox font-medium instead of `font-oxM` because of the style `@font-face`. same as `font-ppB` and `font-oxB`.

For currency amount, Use `font-ox`; use `font-pp` for other text.

```js
theme: {
  extend: {
    colors: {
      info: '#1F32D6',
      success: '#11C45A',
      warning: '#FA8C16',
      error: '#E74E5A',
      // 旧色值
      black: '#1c1c1c',
      black_1: '#414552',
      dark: '#222222',
      primary: '#1F32D6',
      gray_1: '#73798B',
      gray_2: '#B9BCC5',
      gray_3: '#EDEEF3',
      gray_4: '#F8F9FC',
      gray_5: '#BCBBC1',
      gray_6: '#797783',
      gray_7: '#F1F1F5',
      gray_tips_1: '#8590A6',
      gray_menu: '#F3F4F6',
      gray_border: '#EDEEF3',
      pass: '#26C165',
      // Tags 固定色彩搭配
      tagOrange: '#B54708',
      tagOrangeBg: '#F9F1DD',
      tagDeepBlue: '#026AA2',
      tagDeepBlueBg: '#EDF4F8',
      tagDarkBlue: '#3571B8',
      tagDarkBlueBg: '#3571B80D',
      tagDeepTeal: '#1C6D73',
      tagDeepTealBg: '#1C6D730D',
      tagGreen: '#067647',
      tagGreenBg: '#E4F5EB',
      tagRed: '#C11574',
      tagRedBg: '#C115740D',
      tagPurple: '#6F44AC',
      tagPurpleBg: '#6F44AC0D',
      tagBlue: '#175CD3',
      tagBlueBg: '#EFF8FF',
      tagBlueDeepBg: '#E7F0FF',
      tagBlack: '#363F72',
      tagBlackBg: '#363F720D',
      tagBrown: '#734835',
      tagBrownBg: '#7348350D',
      primaryBg: '#E8EAFA',
    },
    fontSize: {
      xxs: ['10px', '12px'],
      xs: ['12px', '16px'],
      sm: ['14px', '20px'],
      base: ['16px', '24px'],
      lg: ['18px', '28px'],
      xl: ['20px', '28px'],
      '2xl': ['24px', '32px'],
      '3xl': ['28px', '36px'],
      '4xl': ['32px', '40px'],
    },
    fontFamily: {
      pp: ['Poppins'],
      ppM: ['Poppins-Medium', 'Poppins'],
      ppB: ['Poppins-SemiBold', 'Poppins'],
      ox: ['Oxanium'],
      oxM: ['Oxanium-Medium', 'Oxanium'],
      oxB: ['Oxanium-SemiBold', 'Oxanium'],
    },
    boxShadow: {
      menuLineB: '0 -1px 0 0 #EDEEF3 inset;',
      menuLineT: '0 1px 0 0 #EDEEF3 inset;',
      lineB: '0 -1px 0 0 #e5e6eb inset;',
      workflowBox: '0px 6px 18px 0px rgba(24, 28, 39, 0.04);',
    },
  },
}
```
